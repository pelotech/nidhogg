# Default values for nidhogg.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 2

image:
  repository: ghcr.io/pelotech/nidhogg
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Configuration for nidhogg
configuration:
  taintRemovalDelayInSeconds: 5
#  taintNamePrefix: "required.node.taint.prefix.daemonset.tolerations.have.to.start.with"

#  nodeSelector:
#    - "path.to.node.selector.where.the.ds.starts"
#  daemonsets:
#    - name: "daemonset.being.observed"
#      namespace: "namespace"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# StatefulSet additional labels
extraLabels: {}
podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   memory: 200Mi
  # requests:
  #   cpu: 100m
  #   memory: 200Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
